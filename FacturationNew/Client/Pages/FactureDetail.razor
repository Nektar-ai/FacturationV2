@page "/factures/{code}"

@inject HttpClient http
@inject NavigationManager nav

@using Facturation.Shared

<br />
<h1>Detail Facture</h1>
<br />
@if (facList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Numero</th>
                <th>Client</th>
                <th>Montant dû</th>
                <th>Montant Réglé</th>
                <th>Date Emission</th>
                <th>Date Règlement</th>
            </tr>
        </thead>
        <tbody>
            @{fac = facList.Where(fac => fac.code == @Code).FirstOrDefault();}
            <tr>
                <td>@fac.code</td>
                <td>@fac.client</td>
                <td>@fac.montantDu €</td>
                <td>@fac.montantRegle €</td>
                <td>@fac.GetDateE()</td>
                @if (fac.montantRegle != 0)
                {
                    <td>@fac.GetDateR()</td>
                }
                else
                {
                    <td style="color:red"> En Attente </td>
                }
            </tr>
        </tbody>
    </table>
}
@code {

    [Parameter]
    public string Code { get; set; }

    IEnumerable<FactureDTO> facList = null;
    FactureDTO fac = new FactureDTO();

@*Facture fac = _data.Factures.Where(fac => fac.code == code).FirstOrDefault();*@

@*private IEnumerable<Facture> allFactures = null;*@

    protected override async Task OnInitializedAsync()
    {
        facList = await http.GetFromJsonAsync<IEnumerable<FactureDTO>>("api/factures");
    }

}



